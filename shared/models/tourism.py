import enum
from sqlalchemy import Column, ForeignKey, Boolean, Float, Integer, UnicodeText
from ..sa_types import IntEnum
from .enums import TourismType, SmokingType, BarrierType, InfoType, ManMade, HistoricType, Amenity, BuildingType, NaturalType, BuildingPartType, RoofShape, OSMObjectType, WheelchairAccess, AccessType, LeisureType, Location, AttractionType, MemorialKind, PlaceType, Surface, IndoorType, LandType, Support, ArtWorkType
from . import Addressable

class Denotation(enum.Enum):
    natural_monument = 0

class WaterSlideType(enum.Enum):
    body_slide = 0

class ShowerType(enum.Enum):
    hot = 0

class Tourism(Addressable):
    __tablename__ = "tourisms"
    __mapper_args__ = {'polymorphic_identity': 'tourism', 'polymorphic_load': 'selectin'}
    id = Column(Integer, ForeignKey("addressables.id"), primary_key=True)
    type = Column(IntEnum(TourismType), nullable=False)
    operator = Column(UnicodeText)
    information_type = Column(IntEnum(InfoType))
    hiking = Column(Boolean)
    bicycle = Column(Boolean)
    stars = Column(Integer)
    map_type = Column(UnicodeText)
    map_size = Column(UnicodeText)
    ski = Column(Boolean)
    fireplace = Column(Boolean)
    artist_name = Column(UnicodeText)
    artwork_type = Column(IntEnum(ArtWorkType))
    start_date = Column(UnicodeText)
    smoking = Column(IntEnum(SmokingType))
    phone = Column(UnicodeText)
    wikipedia = Column(UnicodeText)
    barrier_type = Column(IntEnum(BarrierType))
    direction = Column(UnicodeText)
    material = Column(UnicodeText)
    inscription = Column(UnicodeText)
    foot = Column(Boolean)
    zoo = Column(UnicodeText)
    height = Column(Integer)
    man_made = Column(IntEnum(ManMade))
    historic = Column(IntEnum(HistoricType))
    amenity = Column(IntEnum(Amenity))
    building = Column(IntEnum(BuildingType))
    natural = Column(IntEnum(NaturalType))
    cuisine = Column(UnicodeText)
    building_part = Column(IntEnum(BuildingPartType))
    internet_access_fee = Column(Boolean)
    roof_height = Column(Integer)
    roof_shape = Column(IntEnum(RoofShape))
    heritage = Column(Integer)
    heritage_operator = Column(UnicodeText)
    fee = Column(Boolean)
    old_name = Column(UnicodeText)
    designation = Column(UnicodeText)
    rooms = Column(Integer)
    image = Column(UnicodeText)
    wheelchair = Column(IntEnum(WheelchairAccess))
    access = Column(IntEnum(AccessType))
    disused = Column(Boolean)
    layer = Column(Integer)
    architect = Column(UnicodeText)
    leisure = Column(IntEnum(LeisureType))
    bitcoin_payment = Column(Boolean)
    noname = Column(Boolean)
    attraction = Column(IntEnum(AttractionType))
    religion = Column(UnicodeText)
    caravans = Column(Boolean)
    tents = Column(Boolean)
    en_description = Column(UnicodeText)
    facebook = Column(UnicodeText)
    species = Column(UnicodeText)
    # What they do there?
    taxon_cs = Column(UnicodeText)
    fax = Column(UnicodeText)
    short_name = Column(UnicodeText)
    ref_1 = Column(UnicodeText)
    min_height = Column(Integer)
    location = Column(IntEnum(Location))
    denotation = Column(IntEnum(Denotation))
    leaf_type = Column(UnicodeText)
    # Why is it here?
    taxon = Column(UnicodeText)
    official_name = Column(UnicodeText)
    colour = Column(UnicodeText)
    lit = Column(Boolean)
    artwork_subject = Column(UnicodeText)
    author = Column(UnicodeText)
    artist_wikidata = Column(UnicodeText)
    memorial = Column(IntEnum(MemorialKind))
    support = Column(IntEnum(Support))
    place = Column(IntEnum(PlaceType))
    surface = Column(IntEnum(Surface))
    power_supply = Column(Boolean)
    indoor = Column(IntEnum(IndoorType))
    breakfast = Column(Boolean)
    covered = Column(Boolean)
    flood_date = Column(UnicodeText)
    horse = Column(Boolean)
    artist = Column(UnicodeText)
    en_note = Column(UnicodeText)
    water_slide = Column(IntEnum(WaterSlideType))
    landuse = Column(IntEnum(LandType))
    shower = Column(IntEnum(ShowerType))
    litecoin_payment = Column(Boolean)
    high_water_height = Column(Integer)
    drinking_water = Column(Boolean)
    noexit = Column(Boolean)
    old_ref = Column(UnicodeText)
    alt_name_cs = Column(UnicodeText)

